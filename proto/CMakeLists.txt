# Creates a library target that contains the generated protocol buffers code.
set (protoFiles
    "domain.proto"
    "execution.proto"
    "exe_data.proto"
    "model.proto"
    "net.proto"
    "testing.proto"
)

# Compiler settings
if (MSVC)
    # Disable all warnings, since the C++ code is generated by the Protocol
    # Buffers compiler and we therefore can't do anything about them anyway.
    add_compile_options("/W0")
endif ()

# We want the files to appear in the Visual Studio UI, so we add them
# as source files in the library below, but prevent compilation with
# a CMake property.
set_source_files_properties (${protoFiles} PROPERTIES HEADER_FILE_ONLY TRUE)
source_group("Protobuf Files" FILES ${protoFiles})

find_package (ProtobufTarget REQUIRED)
PROTOBUF_GENERATE_CPP (sources headers ${protoFiles})
set (target "coralproto")
add_library (${target} OBJECT ${sources} ${headers} ${protoFiles})
target_include_directories (${target}
    INTERFACE ${CMAKE_CURRENT_BINARY_DIR}
    PUBLIC $<TARGET_PROPERTY:protobuf,INTERFACE_INCLUDE_DIRECTORIES>)
if (UNIX)
    target_compile_options (${target} PRIVATE "-fPIC")
endif()
